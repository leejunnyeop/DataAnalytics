str(monthly_air_quality)
avg_pm10_by_district <- monthly_air_quality %>%
+     group_by(측정소명) %>%
+     summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
load("C:/Users/ktnu2/데이터애널리스트/.RData")
# 구별 미세먼저 평균 수치 막대 그래프
# 구별 미세먼지 평균 계산 및 시각화
avg_pm10_by_district <- monthly_air_quality %>%
+     group_by(측정소명) %>%
+     summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 구별 미세먼저 평균 수치 막대 그래프
# 구별 미세먼지 평균 계산 및 시각화
avg_pm10_by_district <- monthly_air_quality %>%
+     group_by(측정소명) %>%
+     summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 구별 미세먼저 평균 수치 막대 그래프
# 구별 미세먼지 평균 계산 및 시각화
avg_pm10_by_district <- monthly_air_quality %>%
+     group_by(측정소명) %>%
+     summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
library(ggplot2)
library(dplyr)
library(ggplot2)
avg_pm10_by_district <- monthly_air_quality %>%
+     group_by(측정소명) %>%
+     summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
str(monthly_air_quality)
rm(list = ls())
library(ggplot2)
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
avg_pm10_by_district <- monthly_air_quality %>%+
group_by(측정소명) %>%+
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
View(monthly_air_quality)
library(dplyr)
avg_pm10_by_district <- monthly_air_quality %>%
+     group_by(측정소명) %>%
+     summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
View(avg_pm10_by_district)
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
+     geom_bar(stat = "identity") +
+     coord_flip() +
+     labs(title = "서울시 구별 미세먼지(PM10) 평균 수치", x = "구", y = "평균 PM10 수치") +
+     theme_minimal()
# 구별 미세먼저 평균 수치 막대 그래프
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
View(avg_pm10_by_district)
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10))
geom_bar(stat = "identity")
coord_flip()
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치", x = "구", y = "평균 PM10 수치")
theme_minimal()
# 구별 미세먼저 평균 수치 막대 그래프
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 계산된 평균을 바탕으로 시각화
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 막대 색상 추가
coord_flip() +
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치",
x = "구",
y = "평균 PM10 수치") +
theme_minimal()
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 비교( 이중막대 그래프)
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
library(dplyr)
library(ggplot2)
library(tidyr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyr)
#구별 미세먼저 평균 수치 막대 그래프
# 구별 미세먼지(PM10) 평균 계산
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 계산된 평균을 바탕으로 시각화
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 막대 색상 추가
coord_flip() +
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치",
x = "구",
y = "평균 PM10 수치") +
theme_minimal()
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 비교( 이중막대 그래프)
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
# 이중 막대 그래프로 시각화
ggplot(avg_pollution_by_district, aes(x = 측정소명, y = Average, fill = Pollutant)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Avg_PM10" = "steelblue", "Avg_PM25" = "darkorange")) +
labs(title = "서울시 구별 미세먼지와 초미세먼지 평균 수치 비교",
x = "구", y = "평균 수치") +
theme_minimal()
#구별 미세먼지와 초미세먼지 수치 상관관계 산점도
library(plotly)
# 미세먼지와 초미세먼지 수치 상관관계 시각화
p <- ggplot(monthly_air_quality, aes(x = 미세먼지, y = 초미세먼지, color = 측정소명)) +
geom_point(alpha = 0.5) +
labs(title = "미세먼지와 초미세먼지 수치 상관관계 (구별 색상 구분)",
x = "미세먼지(PM10)", y = "초미세먼지(PM2.5)", color = "측정소명") +
theme_minimal()
# ggplot 객체를 인터랙티브 차트로 변환
ggplotly(p)
library(leaflet)
library(leaflet)
# 측정소 위치 지도 시각화(미세먼지 수치 반영)
latest_air_quality <- filter(monthly_air_quality, 측정월 == "202403")
latest_air_quality <- filter(monthly_air_quality, 측정월 == "202403")
# 측정소별 미세먼지 평균 수치 계산
avg_pm10 <- latest_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 측정소 좌표 데이터와 결합
combined_data <- left_join(station_coord, avg_pm10, by = "측정소명")
# 데이터 결합
combined_data <- station_coord %>%
inner_join(monthly_air_quality_seoul, by = "측정소명")
library(dplyr)
library(leaflet)
# 데이터 결합
combined_data <- station_coord %>%
inner_join(monthly_air_quality_seoul, by = "측정소명")
# '측정소명'을 기준으로 두 데이터 프레임 결합
combined_data <- station_coord %>%
inner_join(monthly_air_quality_seoul, by = "측정소명")
combined_data <- station_coord %>%
inner_join(monthly_air_quality_seoul, by = "측정소명")
library(dplyr)
library(leaflet)
# 데이터 결합
combined_data <- station_coord %>%
inner_join(monthly_air_quality_seoul, by = "측정소명")
View(latest_air_quality)
combined_data <- station_coord %>%
station_coord <- read.csv("station_coord.csv")
station_coord <- read.csv("station_coord.csv", fileEncoding = "euc-kr")
library(leaflet)
# 측정소 위치 지도 시각화(미세먼지 수치 반영)
# 가볍고 무료라서 leaflet 사용
# 최신 월의 데이터만 선택 (예시: 202403)
latest_air_quality <- filter(monthly_air_quality, 측정월 == "202403")
# 측정소별 미세먼지 평균 수치 계산
avg_pm10 <- latest_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 측정소 좌표 데이터와 결합
combined_data <- left_join(station_coord, avg_pm10, by = "측정소명")
# 색상 팔레트 설정
pal <- colorNumeric(palette = "viridis", domain = combined_data$Avg_PM10)
# 지도 시각화
leaflet(combined_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude,
color = ~pal(Avg_PM10), fillColor = ~pal(Avg_PM10),
fillOpacity = 0.8, radius = 8, popup = ~paste(측정소명, "평균 PM10:", Avg_PM10)) %>%
addLegend("bottomright", pal = pal, values = ~Avg_PM10,
title = "평균 PM10 농도", opacity = 1)
load("C:/Users/ktnu2/데이터애널리스트/.RData")
dongjak_data <- mothly_air_quality %>%
filter(측정소명 == "동작구")
library(dplyr)
library(dplyr)
library(ggplot2)
dongjak_data <- mothly_air_quality %>%
filter(측정소명 == "동작구")
View(monthly_air_quality)
View(monthly_air_quality)
mothly_air_quality_seoul <- read.csv("mothly_air_quality.csv", fileEncoding = "euc-kr")
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
dongjak_data <- mothly_air_quality %>%
filter(측정소명 == "동작구")
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_Pm10 = mean(미세먼지, na.rm = TRUE))
ggplot(yearly_avg_pm10, aes(x = Year, y=Avg_pm10))
ggplot(yearly_avg_pm10, aes(x = Year, y=Avg_pm10))
library(dplyr)
library(ggplot2)
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality_seoul %>%
filter(측정소명 == "동작구")
library(dplyr)
library(ggplot2)
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
# '측정월'에서 연도 정보 추출
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))  # '측정월'에서 첫 4자리를 추출하여 연도로 사용
# 연도별 평균 미세먼지(PM10) 수치 계산
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 결과 시각화
ggplot(yearly_avg_pm10, aes(x = Year, y = Avg_PM10)) +
geom_line() +  # 선 그래프
geom_point() +  # 데이터 포인트
labs(title = "동작구 연도별 미세먼지(PM10) 평균 수치",
x = "연도", y = "평균 PM10 수치") +
theme_minimal()
rm(list = ls())
library(ggplot2)
library(dplyr)
library(leaflet)
library(leaflet)
# 데이터 로드
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
station_coord <- read.csv("station_coord.csv", fileEncoding = "euc-kr")
#구별 미세먼지 평균 및 시각화
# 구별 미세먼지(PM10) 평균 계산
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 계산된 평균을 바탕으로 시각화
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 막대 색상 추가
coord_flip() +
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치",
x = "구",
y = "평균 PM10 수치") +
theme_minimal()
#서울시 구별 미세먼지와 초미세먼지 평균 수치 비교(이중막대 그래프)
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
rm(list = ls())
# 라이브러리
library(ggplot2)
library(dplyr)
library(leaflet)
library(tidyr)
library(tidyr)
#데이터 로드
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
station_coord <- read.csv("station_coord.csv", fileEncoding = "euc-kr")
#구별 미세먼저 평균 수치 막대 그래프
# 구별 미세먼지(PM10) 평균 계산
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 계산된 평균을 바탕으로 시각화
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치",
x = "구",
y = "평균 PM10 수치") +
theme_minimal()
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 비교( 이중막대 그래프)
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
# 이중 막대 그래프로 시각화
ggplot(avg_pollution_by_district, aes(x = 측정소명, y = Average, fill = Pollutant)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Avg_PM10" = "steelblue", "Avg_PM25" = "darkorange")) +
labs(title = "서울시 구별 미세먼지와 초미세먼지 평균 수치 비교",
x = "구", y = "평균 수치") +
theme_minimal()
#동작구 연도별 미세먼지(PM10) 평균 수치
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality_seoul %>%
filter(측정소명 == "동작구")
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
# '측정월'에서 연도 정보 추출
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))
# 연도별 평균 미세먼지(PM10) 수치 계산
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 결과 시각화
ggplot(yearly_avg_pm10, aes(x = Year, y = Avg_PM10)) +
geom_line() +  # 선 그래프
geom_point() +  # 데이터 포인트
labs(title = "동작구 연도별 미세먼지(PM10) 평균 수치",
x = "연도", y = "평균 PM10 수치") +
theme_minimal()
# 측정소 위치 지도 시각화(미세먼지 수치 반영)
# 최신 월의 데이터만 선택 (예시: 202403)
latest_air_quality <- filter(monthly_air_quality, 측정월 == "202403")
# 측정소별 미세먼지 평균 수치 계산
avg_pm10 <- latest_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 측정소 좌표 데이터와 결합
combined_data <- left_join(station_coord, avg_pm10, by = "측정소명")
# 색상 팔레트 설정
pal <- colorNumeric(palette = "viridis", domain = combined_data$Avg_PM10)
# 지도 시각화
leaflet(combined_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude,
color = ~pal(Avg_PM10), fillColor = ~pal(Avg_PM10),
fillOpacity = 0.8, radius = 8, popup = ~paste(측정소명, "평균 PM10:", Avg_PM10)) %>%
addLegend("bottomright", pal = pal, values = ~Avg_PM10,
title = "평균 PM10 농도", opacity = 1)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
load("C:/Users/ktnu2/데이터애널리스트/.RData")
library(ggplot2)
library(dplyr)
library(leaflet)
library(tidyr)
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
# 구별 미세먼지(PM10) 평균 계산
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 계산된 평균을 바탕으로 시각화
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 막대 색상 추가
coord_flip() +
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치",
x = "구",
y = "평균 PM10 수치") +
theme_minimal()
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
# 이중 막대 그래프로 시각화
ggplot(avg_pollution_by_district, aes(x = 측정소명, y = Average, fill = Pollutant)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Avg_PM10" = "steelblue", "Avg_PM25" = "darkorange")) +
labs(title = "서울시 구별 미세먼지와 초미세먼지 평균 수치 비교",
x = "구", y = "평균 수치") +
theme_minimal()
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality_seoul %>%
filter(측정소명 == "동작구")
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
# '측정월'에서 연도 정보 추출
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))  # '측정월'에서 첫 4자리를 추출하여 연도로 사용
# 연도별 평균 미세먼지(PM10) 수치 계산
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 결과 시각화
ggplot(yearly_avg_pm10, aes(x = Year, y = Avg_PM10)) +
geom_line() +  # 선 그래프
geom_point() +  # 데이터 포인트
labs(title = "동작구 연도별 미세먼지(PM10) 평균 수치",
x = "연도", y = "평균 PM10 수치") +
theme_minimal()
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
# '측정월'에서 연도 정보 추출
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))  # '측정월'에서 첫 4자리를 추출하여 연도로 사용
# 연도별 평균 미세먼지(PM10) 수치 계산
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 결과 시각화
ggplot(yearly_avg_pm10, aes(x = Year, y = Avg_PM10)) +
geom_line() +  # 선 그래프
geom_point() +  # 데이터 포인트
labs(title = "동작구 연도별 미세먼지(PM10) 평균 수치",
x = "연도", y = "평균 PM10 수치") +
theme_minimal()
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
# '측정월'에서 연도 정보 추출
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))
# 연도별 평균 미세먼지 수치 계산
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 결과 시각화
ggplot(yearly_avg_pm10, aes(x = Year, y = Avg_PM10, group =1)) +
geom_line() +
geom_point() +
labs(title = "동작구 연도별 미세먼지(PM10) 평균 수치",
x = "연도", y = "평균 PM10 수치") +
theme_minimal()
# 최신 월의 데이터만 선택 (예시: 202403)
latest_air_quality <- filter(monthly_air_quality, 측정월 == "202403")
# 측정소별 미세먼지 평균 수치 계산
avg_pm10 <- latest_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 측정소 좌표 데이터와 결합
combined_data <- left_join(station_coord, avg_pm10, by = "측정소명")
# 색상 팔레트 설정
pal <- colorNumeric(palette = "viridis", domain = combined_data$Avg_PM10)
# 지도 시각화
leaflet(combined_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude,
color = ~pal(Avg_PM10), fillColor = ~pal(Avg_PM10),
fillOpacity = 0.8, radius = 8, popup = ~paste(측정소명, "평균 PM10:", Avg_PM10)) %>%
addLegend("bottomright", pal = pal, values = ~Avg_PM10,
title = "평균 PM10 농도", opacity = 1)
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
library(ggplot2)
library(dplyr)
library(leaflet)
library(tidyr)
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
getwb()
getwd()
setwd("C:/Users/ktnu2/데이터애널리스트")
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
# 구별 미세먼지(PM10) 평균 계산
avg_pm10_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 계산된 평균을 바탕으로 시각화
ggplot(avg_pm10_by_district, aes(x = reorder(측정소명, Avg_PM10), y = Avg_PM10)) +
geom_bar(stat = "identity", fill = "skyblue") +  # 막대 색상 추가
coord_flip() +
labs(title = "서울시 구별 미세먼지(PM10) 평균 수치",
x = "구",
y = "평균 PM10 수치") +
theme_minimal()
# 서울시 구별 미세먼지와 초미세먼지 평균 수치 계산
avg_pollution_by_district <- monthly_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE),
Avg_PM25 = mean(초미세먼지, na.rm = TRUE)) %>%
pivot_longer(cols = c(Avg_PM10, Avg_PM25), names_to = "Pollutant", values_to = "Average")
# 이중 막대 그래프로 시각화
ggplot(avg_pollution_by_district, aes(x = 측정소명, y = Average, fill = Pollutant)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Avg_PM10" = "steelblue", "Avg_PM25" = "darkorange")) +
labs(title = "서울시 구별 미세먼지와 초미세먼지 평균 수치 비교",
x = "구", y = "평균 수치") +
theme_minimal()
# 동작구 데이터 필터링
dongjak_data <- monthly_air_quality %>%
filter(측정소명 == "동작구")
# '측정월'에서 연도 정보 추출
dongjak_data <- dongjak_data %>%
mutate(Year = substr(측정월, 1, 4))
# 연도별 평균 미세먼지 수치 계산
yearly_avg_pm10 <- dongjak_data %>%
group_by(Year) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 결과 시각화
ggplot(yearly_avg_pm10, aes(x = Year, y = Avg_PM10, group =1)) +
geom_line() +
geom_point() +
labs(title = "동작구 연도별 미세먼지(PM10) 평균 수치",
x = "연도", y = "평균 PM10 수치") +
theme_minimal()
# 최신 월의 데이터만 선택 (예시: 202403)
latest_air_quality <- filter(monthly_air_quality, 측정월 == "202403")
# 측정소별 미세먼지 평균 수치 계산
avg_pm10 <- latest_air_quality %>%
group_by(측정소명) %>%
summarize(Avg_PM10 = mean(미세먼지, na.rm = TRUE))
# 측정소 좌표 데이터와 결합
combined_data <- left_join(station_coord, avg_pm10, by = "측정소명")
# 색상 팔레트 설정
pal <- colorNumeric(palette = "viridis", domain = combined_data$Avg_PM10)
# 지도 시각화
leaflet(combined_data) %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude,
color = ~pal(Avg_PM10), fillColor = ~pal(Avg_PM10),
fillOpacity = 0.8, radius = 8, popup = ~paste(측정소명, "평균 PM10:", Avg_PM10)) %>%
addLegend("bottomright", pal = pal, values = ~Avg_PM10,
title = "평균 PM10 농도", opacity = 1)
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
monthly_air_quality <- read.csv("monthly_air_quality_seoul.csv", fileEncoding = "euc-kr")
station_coord <- read.csv("station_coord.csv", fileEncoding = "euc-kr")
